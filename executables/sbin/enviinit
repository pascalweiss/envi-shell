#!/usr/bin/env bash
#
# ENVI ENVIRONMENT INITIALIZATION SCRIPT
# =====================================
# 
# This script is the core initialization component of the envi shell system.
# It is sourced by ALL shell instances (interactive and non-interactive) via ~/.envi_rc
# 
# EXECUTION ORDER:
# 1. Shell startup (.bashrc/.zshrc) 
# 2. source ~/.envi_rc
# 3. â†’ enviinit (THIS SCRIPT) - Universal environment setup
# 4. Oh-My-Zsh framework loading (zsh only)
# 5. Powerlevel10k theme loading (if enabled, zsh only)
# 6. envi_post_init - Interactive session features only
#
# DESIGN PRINCIPLES:
# - Only put universal environment setup here (PATH, variables, sourcing configs)
# - NO interactive features (those go in envi_post_init)
# - Must work in both interactive and non-interactive shells
# - Defaults loaded first, then user config to override defaults
#
# STRUCTURE:
# 1. Platform-specific executable paths
# 2. Default configurations and common utilities
# 3. User configuration loading (with feature controls)
# 4. Environment settings (colors, locale)
# 5. Tool integrations (NVM, etc.)
# 6. Shell-specific setup (Oh-My-Zsh theme linking)

# ============================================================================
# PLATFORM-SPECIFIC EXECUTABLE PATHS
# ============================================================================

# System-critical PATH (essential system directories)
export PATH="$PATH:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

# Load platform-specific CLI tools
if [[ "$(uname)" = *Darwin* ]]; then 
    export PATH=$PATH:$ENVI_HOME/executables/macbin
elif [[ "$(uname)" = *Linux* ]]; then 
    export PATH=$PATH:$ENVI_HOME/executables/linuxbin
fi

# Universal executables (work on all platforms)
export PATH=$PATH:$ENVI_HOME/executables/bin

# ============================================================================
# DEFAULT CONFIGURATIONS AND COMMON UTILITIES
# ============================================================================


# Load common shell functions (contains, add_symlink, 256colors)
source $ENVI_HOME/executables/bin/commons

# System-critical envi aliases (required for envi system functionality)
alias envi="cd \$ENVI_HOME"
alias loc="vim ~/.envi/config/.envi_locations"
alias environ="vim ~/.envi/config/.envi_env"
alias short="vim ~/.envi/config/.envi_shortcuts"
alias apps="vim ~/.envi/config/.envi_app_integrations"

# ============================================================================
# DEFAULT CONFIGURATION LOADING
# ============================================================================
# Load system defaults first (provides baseline configuration)


# Load default environment variables and feature controls
if [ -f "$ENVI_HOME/defaults/default_env_user.sh" ]; then 
    source $ENVI_HOME/defaults/default_env_user.sh; 
fi

# Load default path locations
if [ -f "$ENVI_HOME/defaults/default_locations.sh" ]; then 
    source $ENVI_HOME/defaults/default_locations.sh; 
fi

# Load default shortcuts and aliases
if [ -f "$ENVI_HOME/defaults/default_shortcuts.sh" ]; then 
    source $ENVI_HOME/defaults/default_shortcuts.sh; 
fi

# ============================================================================
# USER CONFIGURATION LOADING (OVERRIDES DEFAULTS)
# ============================================================================
# Load user configs second so they can override defaults

# Load user environment variables and feature controls (overrides defaults)
if [ -f "$ENVI_HOME/config/.envi_env" ]; then 
    source $ENVI_HOME/config/.envi_env; 
fi

# Load user-defined path locations (overrides defaults)  
if [ -f "$ENVI_HOME/config/.envi_locations" ]; then 
    source $ENVI_HOME/config/.envi_locations; 
fi

# Load user-defined shortcuts and aliases (overrides defaults)
if [ -f "$ENVI_HOME/config/.envi_shortcuts" ]; then 
    source $ENVI_HOME/config/.envi_shortcuts; 
fi

# ============================================================================
# ENVIRONMENT SETTINGS
# ============================================================================

# Apply terminal color settings
if [ "$ENVI_256_COLORS" = "true" ]; then 256colors true; else 256colors false; fi

# Set UTF-8 locale for proper character encoding
if [ "$ENVI_UTF_8" = "true" ]; then export LC_ALL="en_US.UTF-8"; fi

# ============================================================================
# APPLICATION INTEGRATIONS
# ============================================================================

# Load default app integrations (provides baseline tool configurations)
if [ -f "$ENVI_HOME/defaults/default_app_integrations.sh" ]; then
    source "$ENVI_HOME/defaults/default_app_integrations.sh"
fi

# Load user app integrations (overrides defaults)
if [ -f "$ENVI_HOME/config/.envi_app_integrations" ]; then
    source "$ENVI_HOME/config/.envi_app_integrations"
fi

# Initialize core app integrations (Homebrew, NVM)
if type init_app_integrations >/dev/null 2>&1; then
    init_app_integrations
fi


# ============================================================================
# SHELL-SPECIFIC SETUP
# ============================================================================


# Oh-My-Zsh framework loading and configuration (zsh only)
if [ "$OHMYZSH_ENABLED" = "true" ] && [ -n "$ZSH" ]; then
    # Configure plugins from OHMYZSH_PLUGINS variable BEFORE loading Oh-My-Zsh
    if [ -n "$OHMYZSH_PLUGINS" ]; then
        # Convert space-separated string to zsh array format
        export plugins=(${=OHMYZSH_PLUGINS})
    fi
    
    # Git prompt cache optimization
    if [ "$OHMYZSH_GIT_PROMPT_CACHE" = "true" ]; then
        export ZSH_THEME_GIT_PROMPT_CACHE=yes
    fi
    
    # Theme linking - creates symlinks for custom themes BEFORE loading Oh-My-Zsh
    if [ "$OHMYZSH_THEME_LINKING" = "true" ] && [ -n "$ZSH_THEME" ]; then
        # Create symlink from envi dotfiles theme to Oh-My-Zsh themes directory
        if [ -e "$ZSH" ] && [ ! -e "$ZSH/themes/$ZSH_THEME.zsh-theme" ] && [ -e "$HOME/.envi/submodules/dotfiles/themes/$ZSH_THEME.zsh-theme" ]; then
            ln -s "$HOME/.envi/submodules/dotfiles/themes/$ZSH_THEME.zsh-theme" "$ZSH/themes/"
        fi
        # Fallback to default theme if custom theme is not available
        if [ ! -e "$ZSH/themes/$ZSH_THEME.zsh-theme" ]; then
            export ZSH_THEME="robbyrussell"
        fi
    elif [ -z "$ZSH_THEME" ]; then
        # Set default theme if not defined
        export ZSH_THEME="robbyrussell"
    fi
    
    # Load Oh-My-Zsh framework (replaces source $ZSH/oh-my-zsh.sh from .zshrc)
    if [ -f "$ZSH/oh-my-zsh.sh" ]; then
        source "$ZSH/oh-my-zsh.sh"
    fi
    
    # Initialize shell-specific app integrations (Powerlevel10k, CLI completions)
    if type init_shell_app_integrations >/dev/null 2>&1; then
        init_shell_app_integrations
    fi
fi

# ============================================================================
# END OF ENVIINIT
# ============================================================================
# 
# Next steps in shell initialization:
# - Oh-My-Zsh framework loading (zsh only)
# - Powerlevel10k theme loading (if POWERLEVEL10K_ENABLED=true, zsh only) 
# - envi_post_init for interactive session features (tmux, ssh-agent)
