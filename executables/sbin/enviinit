#!/usr/bin/env bash
#
# ENVI ENVIRONMENT INITIALIZATION SCRIPT
# =====================================
# 
# This script is the core initialization component of the envi shell system.
# It is sourced by ALL shell instances (interactive and non-interactive) via ~/.envi_rc
# 
# EXECUTION ORDER:
# 1. Shell startup (.zshrc) 
# 2. source ~/.envi_rc
# 3. â†’ enviinit (THIS SCRIPT) - Complete environment initialization
# 4. Oh-My-Zsh framework loading (zsh only)
#
# DESIGN PRINCIPLES:
# - Universal environment setup (PATH, variables, sourcing configs)
# - Tool integrations with conditional loading based on ENVI_TMUX_ONLY
# - Interactive features at the end with proper PS1 checks
# - Must work in both interactive and non-interactive shells
# - Defaults loaded first, then user config to override defaults
#
# STRUCTURE:
# 1. Platform-specific executable paths
# 2. Default configurations and common utilities
# 3. User configuration loading (with feature controls)
# 4. Environment settings (colors, locale)
# 5. Tool integrations (conditional based on ENVI_TMUX_ONLY)
# 6. Interactive features (tmux auto-start)


# ============================================================================
# PLATFORM-SPECIFIC EXECUTABLE PATHS
# ============================================================================

# Build PATH with platform-specific and universal executables
ENVI_PATHS="$ENVI_HOME/executables/bin"

# Add platform-specific CLI tools
if [[ "$(uname)" = *Darwin* ]]; then 
    ENVI_PATHS="$ENVI_PATHS:$ENVI_HOME/executables/macbin"
elif [[ "$(uname)" = *Linux* ]]; then 
    ENVI_PATHS="$ENVI_PATHS:$ENVI_HOME/executables/linuxbin"
fi

# Single PATH export with proper quoting
export PATH="$ENVI_PATHS:$PATH"

# ============================================================================
# DEFAULT CONFIGURATIONS AND COMMON UTILITIES
# ============================================================================

# Load common shell functions (contains, add_symlink, 256colors)
source $ENVI_HOME/executables/bin/commons

# System-critical envi aliases (required for envi system functionality)
alias envi="cd \$ENVI_HOME"
alias loc="vim ~/.envi/config/.envi_locations"
alias environ="vim ~/.envi/config/.envi_env"
alias short="vim ~/.envi/config/.envi_shortcuts"

# ============================================================================
# DEFAULT CONFIGURATION LOADING
# ============================================================================
# Load system defaults first (provides baseline configuration)

# Load default environment variables and feature controls
source $ENVI_HOME/defaults/default_env_user.sh

# Load default path locations
source $ENVI_HOME/defaults/default_locations.sh

# Load default shortcuts and aliases
source $ENVI_HOME/defaults/default_shortcuts.sh

# ============================================================================
# USER CONFIGURATION LOADING (OVERRIDES DEFAULTS)
# ============================================================================
# Load user configs second so they can override defaults

# Load user environment variables and feature controls (overrides defaults)
if [ -f "$ENVI_HOME/config/.envi_env" ]; then 
    source $ENVI_HOME/config/.envi_env; 
fi

# Load user-defined path locations (overrides defaults)  
if [ -f "$ENVI_HOME/config/.envi_locations" ]; then 
    source $ENVI_HOME/config/.envi_locations; 
fi

# Load user-defined shortcuts and aliases (overrides defaults)
if [ -f "$ENVI_HOME/config/.envi_shortcuts" ]; then 
    source $ENVI_HOME/config/.envi_shortcuts; 
fi

# ============================================================================
# ENVIRONMENT SETTINGS
# ============================================================================

# Apply terminal color settings
if [ "$ENVI_256_COLORS" = "true" ]; then 256colors true; else 256colors false; fi

# Set UTF-8 locale for proper character encoding
if [ "$ENVI_UTF_8" = "true" ]; then export LC_ALL="en_US.UTF-8"; fi

# ============================================================================
# TOOL INTEGRATION FUNCTIONS
# ============================================================================

# Minimal initialization - essential tools only
envi_minimal_init() {
    source "$ENVI_HOME/tool-integrations/homebrew/init.sh"
    source "$ENVI_HOME/tool-integrations/ssh/init.sh"
}

# Full initialization - all tool integrations
envi_full_init() {
    envi_minimal_init
    source "$ENVI_HOME/tool-integrations/neovim/init.sh"
    source "$ENVI_HOME/tool-integrations/zsh/init.sh"
    source "$ENVI_HOME/tool-integrations/node/init.sh"
    source "$ENVI_HOME/tool-integrations/flux/init.sh"
    source "$ENVI_HOME/tool-integrations/angular/init.sh"
}

# ============================================================================
# TOOL INTEGRATIONS
# ============================================================================

# Choose initialization mode based on ENVI_TMUX_ONLY and TMUX_ENABLED settings
if [ "$ENVI_TMUX_ONLY" = "true" ] && [ "$TMUX_ENABLED" = "true" ] && [ -z "$TMUX" ]; then
    # Minimal mode: ENVI_TMUX_ONLY=true, TMUX_ENABLED=true, and outside tmux
    envi_minimal_init
else
    # Full mode: any other case (tmux disabled, inside tmux, or ENVI_TMUX_ONLY=false)
    envi_full_init
fi

# ============================================================================
# INTERACTIVE FEATURES
# ============================================================================

# Tmux auto-start (interactive shells only)
if [ -n "$PS1" ]; then
    source "$ENVI_HOME/tool-integrations/tmux/init.sh"
fi

# ============================================================================
# END OF ENVIINIT
# ============================================================================
