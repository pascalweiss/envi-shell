#!/usr/bin/env bash

if ! tmux list-sessions &>/dev/null; then
    echo "No tmux sessions found"
    exit 1
fi

# Get current session name if we're inside tmux
current_session=""
if [ -n "$TMUX" ]; then
    current_session=$(tmux display-message -p '#S')
fi

# Create session list with (current) marker
session_list=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | sort | while read -r session_name; do
    if [ "$session_name" = "$current_session" ]; then
        echo "$session_name (current)"
    else
        echo "$session_name"
    fi
done)

session=$(echo "$session_list" | fzf \
    --prompt="tmux sessions (a=attach, k=kill): " \
    --bind="a:accept" \
    --bind="k:execute(session_name=\$(echo {} | sed 's/ (current)$//'); tmux kill-session -t \"\$session_name\")+reload(current_session=\"\"; if [ -n \"\$TMUX\" ]; then current_session=\$(tmux display-message -p '#S'); fi; tmux list-sessions -F '#{session_name}' 2>/dev/null | sort | while read -r session_name; do if [ \"\$session_name\" = \"\$current_session\" ]; then echo \"\$session_name (current)\"; else echo \"\$session_name\"; fi; done)" \
    --header="Press 'a' to attach, 'k' to kill session")

if [[ -n "$session" ]]; then
    # Remove (current) marker from session name
    session_name=$(echo "$session" | sed 's/ (current)$//')
    
    if [ -n "$TMUX" ]; then
        # We're inside tmux, switch session
        tmux switch-client -t "$session_name"
    else
        # We're not in tmux, attach normally
        tmux attach-session -t "$session_name"
    fi
fi