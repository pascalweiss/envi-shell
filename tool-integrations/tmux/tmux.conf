# Basic tmux configuration that works across versions

# Enable mouse support
set -g mouse on


# Clipboard integration and copy-mode behavior
# - Use vi-style copy-mode, copy on mouse selection end
# - On macOS, also pipe selection to system clipboard via pbcopy
setw -g mode-keys vi
set -g set-clipboard on

# Default: copy to tmux buffer on mouse selection
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel

# macOS: copy selection to system clipboard
if-shell -b 'uname | grep -q Darwin' \
  'unbind -T copy-mode-vi MouseDragEnd1Pane; \
   bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"; \
   bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"; \
   bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"'

# Linux (Wayland): prefer wl-copy if available
if-shell -b 'uname | grep -vq Darwin && command -v wl-copy >/dev/null 2>&1' \
  'unbind -T copy-mode-vi MouseDragEnd1Pane; \
   bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "wl-copy"; \
   bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"; \
   bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "wl-copy"'

# Linux (X11): fallback to xclip clipboard
if-shell -b 'uname | grep -vq Darwin && ! command -v wl-copy >/dev/null 2>&1 && command -v xclip >/dev/null 2>&1' \
  'unbind -T copy-mode-vi MouseDragEnd1Pane; \
   bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in"; \
   bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in"; \
   bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in"'

# Cyberpunk hacker-style status bar - deep night blue theme
set -g status-position bottom
set -g status-bg colour237
set -g status-fg colour153
set -g status-left-length 100
set -g status-right-length 60
set -g status-justify centre

# Status bar content with smooth blue-gray aesthetic and Nerd Font icons
# Left to right: session name, hostname, current directory, git branch with status
set -g status-left " #[fg=colour117,bg=colour237,bold]⧉ #S #[fg=colour59,bg=colour237]│ #[fg=colour153,bg=colour237,bold]⌂ #h #[fg=colour59,bg=colour237]│ #[fg=colour117,bg=colour237]⟐ #{s|$HOME|~|:pane_current_path} #[fg=colour59,bg=colour237]│ #[fg=colour114,bg=colour237]⎇ #(cd #{pane_current_path} && git branch --show-current 2>/dev/null)#[fg=colour167]#(cd #{pane_current_path} && [[ -n $(git status --porcelain 2>/dev/null) ]] && echo '*' || echo '') #[fg=colour59,bg=colour237]│ "

# Center: Current window/application name
set -g window-status-format "#[fg=colour117,bg=colour237]#W"
set -g window-status-current-format "#[fg=colour117,bg=colour237,bold]#W"

# Right: Kubernetes context (if available) with Nerd Font icons  
set -g status-right "#[fg=colour135,bg=colour237]⬡ #(command -v kubectx >/dev/null 2>&1 && kubectx -c 2>/dev/null | head -1)"

# Window styling
set -g window-status-current-style fg=cyan,bold

# Pane borders
set -g pane-border-style fg=colour237
set -g pane-active-border-style fg=cyan

# Message styling
set -g message-style bg=red,fg=white

# Selection colors - cyberpunk electric cyan with black text for readability
set -g mode-style bg=colour51,fg=colour0
